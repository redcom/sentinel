---
name: Unit tests and coverage

on:
  push:
    paths-ignore:
      - '**/README.md'
env:
  ENVIRONMENT: stg
  PORT: 8000
  IMAGE_TAG_APP: sentinel

jobs:
  unit-and-coverage-tests:
    name: 
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install poetry
        run: |
          pip install -U poetry

      - name: Install and cache python version for this project
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.2'
          cache: 'poetry'

      - name: Install project dependencies
        run: |
          poetry install

      - name: Run unit tests and coverage
        run: |
            # hint that we run the tests on CI system
            poetry run coverage run -m pytest tests/test_unit.py
            poetry run coverage report --fail-under 90

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and tag docker image
        id: "build-image"
        run: |
          docker build -t $IMAGE_TAG_APP .
          mkdir -p docker-artifact
          docker tag $IMAGE_TAG_APP current
          docker save current > docker-artifact/${IMAGE_TAG_APP}.tar

          docker run \
              --env PORT=$PORT \
              -p $PORT:$PORT \
              -d \
              $IMAGE_TAG_APP

      - name: Run integration tests
        run: |
          sleep 1
          nc -z 127.0.0.1 8000
          export BASE_URL=http://127.0.0.1:$PORT
          poetry run pytest tests/test_regression.py
